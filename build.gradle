plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    // Publish libs to e.g central.sonatype.org
    id 'maven-publish'
    // publish to central.sonatype.org via the Central Publisher Portal
    // see: https://jreleaser.org/guide/latest/examples/maven/maven-central.html#_gradle
    alias(libs.plugins.jreleaser)
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

compileJava {
    sourceCompatibility = 17
    targetCompatibility = 17
    // log details of usage of deprecated members or classes.
    options.deprecation = true
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation libs.jopenlibs.vault
    implementation libs.slf4j.api

    // test dependencies
    testImplementation libs.junit.jupiter
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation libs.assertj.core
    testImplementation libs.slf4j.simple
}

java {
    // create sources.jar as well
    withSourcesJar()
    // create javadoc.jar as well
    withJavadocJar()
}

jar {
    manifest.attributes provider: 'gradle'
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'de.otto'
            artifactId = 'kafka-messaging-e2ee'
            description = 'Kafka Messaging End-To-End-Encryption'

            from components.java

            pom {
                name = 'Kafka Messaging E2EE'
                description = 'Kafka Messaging End-To-End-Encryption'
                url = 'https://github.com/otto-de/kafka-messaging-e2ee'
                inceptionYear = '2024'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'andrekaplick5678'
                        name = 'Andre Kaplick'
                        organization = 'OTTO'
                        organizationUrl = 'https://www.github.com/otto-de'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com:otto-de/kafka-messaging-e2ee.git'
                    developerConnection = 'scm:git:ssh://github.com:otto-de/kafka-messaging-e2ee.git'
                    url = 'https://github.com/otto-de/kafka-messaging-e2ee/tree/main'
                }
            }
        }
    }

    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}

jreleaser {
    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('target/staging-deploy')
                }
            }
        }
    }
}

tasks.register("zipForUpload", Zip) {
    dependsOn tasks.named('publish')

    archiveFileName = 'central-bundle.zip'
    from 'build/staging-deploy'
    destinationDirectory = file('build/staging-deploy')
    exclude '**/*.zip'
}
